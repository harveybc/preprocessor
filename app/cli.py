import argparse

def parse_args():
    parser = argparse.ArgumentParser(description='Feature-extractor: A tool for encoding and decoding CSV data with support for dynamic plugins.')
    parser.add_argument('csv_file', help='Path to the CSV file to be processed')
    parser.add_argument('--load_config', help='Path to the configuration file to load', default=None)
    parser.add_argument('--save_config', help='Path to save the configuration file', default=None)
    parser.add_argument('--remote_load_config', help='URL to load remote configuration', default=None)
    parser.add_argument('--remote_save_config', help='URL to save remote configuration', default=None)
    parser.add_argument('--save_encoder', help='Path to save the encoder model', default='encoder_model.h5')
    parser.add_argument('--save_decoder', help='Path to save the decoder model', default='decoder_model.h5')
    parser.add_argument('--load_encoder', help='Path to load the encoder model', default=None)
    parser.add_argument('--load_decoder', help='Path to load the decoder model', default=None)
    parser.add_argument('--remote_load_encoder', help='URL to load remote encoder model', default=None)
    parser.add_argument('--remote_load_decoder', help='URL to load remote decoder model', default=None)
    parser.add_argument('--remote_save_encoder', help='URL to save remote encoder model', default=None)
    parser.add_argument('--remote_save_decoder', help='URL to save remote decoder model', default=None)
    parser.add_argument('--_size', type=int, help='Size of the sliding ', default=10)
    parser.add_argument('--max_error', type=float, help='Maximum mean squared error threshold', default=0.01)
    parser.add_argument('--initial_size', type=int, help='Initial size of the encoder/decoder interface', default=256)
    parser.add_argument('--step_size', type=int, help='Step size to reduce the interface size', default=32)
    parser.add_argument('--remote_log', help='URL for remote logging', default=None)
    parser.add_argument('--remote_username', help='Username for remote logging', default=None)
    parser.add_argument('--remote_password', help='Password for remote logging', default=None)
    parser.add_argument('--encoder_plugin', help='Encoder plugin to use', default='default_encoder')
    parser.add_argument('--decoder_plugin', help='Decoder plugin to use', default='default_decoder')
    parser.add_argument('--output_file', help='Path to save the output data', default='output.csv')
    parser.add_argument('--headers', action='store_true', help='Indicate if the CSV file has headers')
    parser.add_argument('--force_date', action='store_true', help='Force inclusion of the date column in the output')
    parser.add_argument('--debug_file', help='Path to save debug information', default='debug_out.json')
    
    args, unknown = parser.parse_known_args()
    return args, unknown
